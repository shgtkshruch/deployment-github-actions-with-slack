name: Deployment

on: deployment

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Build application
        run: |
          echo 'build application'
  
  production:
    needs: [build]
    runs-on: ubuntu-latest
    if: github.event.deployment.environment == 'production'
    steps:
      - name: Prodcution deploy
        run: |
          echo ${{ github.event.deployment.environment }}

  staging:
    needs: [build]
    runs-on: ubuntu-latest
    if: github.event.deployment.environment == 'staging'
    steps:
      - name: Staging deploy
        run: |
          echo ${{ github.event.deployment.environment }}

  dev:
    needs: [build]
    runs-on: ubuntu-latest
    if: github.event.deployment.environment == 'dev'
    steps:
      - name: Dev deploy
        run: |
          echo ${{ github.event.deployment.environment }}

  update-deployment-status-in-progress:
    needs: [production, staging, dev]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Set deployment status to [in_progress]
        uses: rsotnychenko/deployment-status-update@0.2.0
        with:
          status: in_progress
          run_id: ${{ github.run_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
  maintenance-off:
    needs: [update-deployment-status-in-progress]
    runs-on: ubuntu-latest
    if:  github.event.deployment.task == 'maintenance'
    steps:
      - name: Meintenance off
        run: |
          echo 'meintenance off'

  update-final-deploy-status:
    needs: [maintenance-off]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Set deployment status
        uses: rsotnychenko/deployment-status-update@0.2.0
        with:
          status: ${{ job.status }}
          run_id: ${{ github.run_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
